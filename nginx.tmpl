daemon off;
worker_processes  2;
events {
    worker_connections 1024;
}
http {
    lua_shared_dict auto_ssl 1m;
    resolver 8.8.8.8;
    init_by_lua_block {
        auto_ssl = (require "resty.auto-ssl").new()

        -- Define a function to determine which SNI domains to automatically handle
        -- and register new certificates for. Defaults to not allowing any domains,
        -- so this must be configured.
        auto_ssl:set("allow_domain", function(domain)
          return true
        end)

        auto_ssl:init()
    }
    init_worker_by_lua_block {
        auto_ssl:init_worker()
    }
    # Internal Handler
    server {
        listen 127.0.0.1:8999;
        location / {
            content_by_lua_block {
                auto_ssl:hook_server()
            }
        }
    }
    {{ range jsonQuery .Env.CONFIG "servers" }}
    server {
        server_name {{ .ServerName }};
        listen 80;
        location / {
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            proxy_pass http://{{ .Target }};
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # WebSockets for 15 minutes
            proxy_read_timeout 900s;
        }
    }
    {{ end }}
}
